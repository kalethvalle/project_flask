name: Project Flask Task
on:
  pull_request:
    branches: ["master"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test
        run: python -m pytest --cov-report=xml --cov=.
        
  calculate_coverage:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      coverage_percent: ${{ steps.calculate_coverage_output.outputs.coverage_percent }}
    steps:
    - name: Install coverage package
      run: pip install coverage

    - name: Calculate test coverage
      id: calculate_coverage_output
      run: |
        python -m coverage xml
        total_lines=$(xml sel -t -v "count(//line)" coverage.xml)
        covered_lines=$(xml sel -t -v "count(//line[@hits!=0])" coverage.xml)
        coverage_percent=$(( 100 * covered_lines / total_lines ))
        echo "::set-output name=coverage_percent::$coverage_percent%"

  validate_pull_request:
    needs: calculate_coverage
    runs-on: ubuntu-latest
    steps:
    - name: Check code formatting
      uses: github/codeql-action/codeql-format@v1

    - name: Run tests with coverage
      run: pytest --cov-report=xml --cov=.

    - name: Check test coverage
      run: |
        coverage xml
        total_lines=$(xml sel -t -v "count(//line)" coverage.xml)
        covered_lines=$(xml sel -t -v "count(//line[@hits!=0])" coverage.xml)
        coverage_percent=$(( 100 * covered_lines / total_lines ))
        echo "Coverage: $coverage_percent%"
        if [[ $coverage_percent -lt ${{ env.MIN_COVERAGE_PERCENT }} ]]; then exit 1; fi

env:
  MIN_COVERAGE_PERCENT: 50